{"version":3,"sources":["screens/home/style.js","components/header/style.js","store/theme/theme.action.js","components/header/index.js","components/card/style.js","components/card/index.js","components/button/style.js","components/button/index.js","components/skills/style.js","shared/pt.js","components/skills/index.js","components/about/style.js","components/about/index.js","services/index.js","store/user/user.actions.js","shared/projects.js","screens/home/index.js","Routers.js","store/user/user.reducer.js","store/theme/theme.reducer.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","theme","handleColorType","CurrentTheme","TitleProjects","h2","ProjectsSection","section","HeaderContainer","themecolor","props","lighten","Avatar","img","LinkRef","h1","a","SocialMedia","ImgMedia","Icon","TYPES","handleTheme","body","dispatch","getState","type","Header","useDispatch","store","useSelector","state","data","useEffect","setTheme","initial_state","user","src","avatar_url","icon","title","map","index","key","href","target","className","action","Theme","CardProjectsContainer","Img","Title","p","Subtitle","CardProjects","imgUrl","name","description","value","color","ButtonContainer","button","darken","Type","SetTheme","Button","onClick","SetThemeIcon","SkillsContainer","SkillTitle","ProgressContainer","ProgressName","h3","ProgressBar","Progress","progress","LANG","about","aboutMe","portfolio","skill","skills","Skills","AboutContainer","Paragraph","About","api","axios","create","baseURL","GetGithubProfile","async","get","res","Projects","projectName","repositoryUrl","Home","ShowProfile","response","error","proj","Router","basename","process","path","exact","component","rootReducers","combineReducers","createStore","applyMiddleware","ReduxThunk","App","Routers","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.701b7145.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst handleColorType = theme => {\n    switch (theme) {\n        case 'dark':\n        return \"color: #fff; background: #000;\";\n      case \"light\":\n        return \"color: #000; background: #f6f6f6;\";\n      default:\n        return \"color: #000; background: #fff;\";\n    }\n};\n\nconst Container = styled.div`\n    width: 100vw;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    min-height: 100vh;\n    ${({CurrentTheme}) => handleColorType(CurrentTheme)}\n`\n\nconst TitleProjects = styled.h2`\n  padding: 30px;\n  display: flex;\n  justify-content: center;\n`\n\nconst ProjectsSection = styled.section`\n  display: flex;\n  width: 95%;\n  min-height: 50vh;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  /* max-width: 100%; */\n  /* padding: 15px 0 0 0 */\n`\n\nexport {Container, ProjectsSection, TitleProjects }","import styled from 'styled-components'\nimport { lighten } from 'polished'\nimport Icon from '@material-ui/core/Icon'\n\nconst handleColorType = theme => {\n    switch (theme) {\n        case 'dark':\n            return \"color: #c4c4c4;\";\n        case \"light\":\n            return \"color: #fff;\";        \n      default:\n        return \"color: #000;\";\n    }\n}\n\nconst HeaderContainer = styled.div`\n    ${({themecolor}) => handleColorType(themecolor)};\n    position: sticky;\n    top: 0;\n    transition:.3s;\n    width: 100%;\n    height: 80px;\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    background-color: ${props=> props.themecolor === 'dark' ? \n    lighten(0.05, \"black\") : \n    '#000'\n    };\n`\nconst Avatar = styled.img`\n    width: 70px;\n    border-radius: 100%;\n`\nconst FullName= styled.h1`\n\n`\nconst LinkRef = styled.a`\n    ${({themecolor}) => handleColorType(themecolor)}\n`\n\nconst SocialMedia = styled.div`\n    width: 150px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`\nconst ImgMedia = styled(Icon)`\n    &&:hover{\n       border-bottom: solid 3px ${lighten(0.1, \"black\")};\n    }\n`\nexport {HeaderContainer, Avatar, FullName, SocialMedia, LinkRef, ImgMedia }","export const TYPES = {\n    SET_THEME: 'SET_THEME'\n}\n\nexport const handleTheme = body=> (dispatch, getState)=>{\n    dispatch({\n        type: TYPES.SET_THEME,\n        theme: body\n    })\n}","import React, {useEffect } from 'react';\nimport { HeaderContainer, Avatar, SocialMedia, LinkRef, ImgMedia } from './style';\nimport {SetThemeIcon} from '../index'\nimport {useDispatch, useSelector } from 'react-redux'\nimport {handleTheme} from '../../store/theme/theme.action'\n\nexport default function Header() {\n\n  const dispatch = useDispatch()\n  const store = useSelector(state=> state)\n  const { data, theme } = store\n  // const [theme, setTheme] = useState('light')\n  const social = [\n    {\n      icon:'github',\n      src:'https://github.com/jonataspinto',\n      title:\"View my Github\"\n    },\n    {\n      icon:'linkedin',\n      src:'https://www.linkedin.com/in/jonatas-pinto-35111a164/',\n      title:\"View my linkedin\"\n\n    }\n  ]\n\n  useEffect(() => {\n    \n  }, [])\n\n  const setTheme = body=>{\n    dispatch(\n      handleTheme(body)\n    )\n  }\n\n  const Theme = (body)=>{\n    switch(body){\n      case 'dark':\n        return setTheme('light')\n      case 'light':\n        return setTheme('dark')\n      default:\n        break\n    }\n  }\n\n  return (\n    <HeaderContainer\n    themecolor={theme.theme || theme.initial_state.theme}\n    >\n      {data.user && <Avatar src={data.user.avatar_url}/>}\n      <SocialMedia>\n        {\n          social.map((data, index)=>{\n            return(\n              <LinkRef\n                key={index} \n                href={data.src}\n                title={data.title}\n                themecolor={theme.theme || theme.initial_state.theme}\n                target='_blank'\n              >\n                <ImgMedia className={`fab fa-${data.icon}`} />\n              </LinkRef >\n            )\n          })\n        }\n      <SetThemeIcon\n        action={()=> Theme(theme.theme || theme.initial_state.theme)}\n        theme={theme.theme || theme.initial_state.theme}\n      />\n      </SocialMedia>\n    </HeaderContainer>\n  );\n}\n","import styled from 'styled-components'\nimport { lighten } from 'polished'\n\nconst handleColorType = theme => {\n    switch (theme) {\n        case 'dark':\n        return \"color: #c4c4c4; \";\n      case \"light\":\n        return \"color: #fff; \";\n      default:\n        return \"color: #000; \";\n    }\n}\n\n\n\nconst CardProjectsContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    width: 200px;\n    padding: 8px;\n    margin: 12px;\n    border: none;\n    border-radius: 10px;\n    transition: .02s;\n    box-shadow: 0px 1px 6px ${props=> props.CurrentTheme === 'dark' ? \n    lighten(0.1, \"black\") : ''};\n    \n    background-color: ${props=> props.CurrentTheme === 'dark' ? \n    lighten(0.05, \"black\") : \n    lighten(0.0, '#0D0D0D')\n    };\n    ${({CurrentTheme}) => handleColorType(CurrentTheme)}\n    &&:hover{\n        transition: .2s;\n        box-shadow: 0px 1px 6px ${props=> props.CurrentTheme === 'dark' ? \n        lighten(0.2, \"black\") : 'rgba(0, 0, 0, 3)'};\n    }\n`\nconst Img = styled.img`\n    width: 120px;\n    display: flex;\n    align-self: center;\n    margin: 12px;\n`\nconst Title = styled.p`\n    font-size: 20px;\n`\nconst Subtitle = styled.p`\n    height: 60px;\n    overflow-y: scroll;\n    &&::-webkit-scrollbar{\n        width: 0;\n    }\n    margin: 12px 0;\n`\nexport {\n    CardProjectsContainer,\n    Img,\n    Title,\n    Subtitle\n}","import React from 'react';\nimport {Button} from '../index'\nimport { useSelector} from 'react-redux'\nimport { \n    CardProjectsContainer, \n    Img,\n    Title,\n    Subtitle\n} from './style';\n\n\nconst CardProjects =(props)=> {\n    const store = useSelector(state=> state)\n    const { theme } =  store\n    \n  return (\n    <CardProjectsContainer\n     CurrentTheme={theme.theme || theme.initial_state.theme}\n    >\n        <Img src={props.imgUrl}/>\n        <Title>{props.name}</Title>\n        <Subtitle>{props.description}</Subtitle>\n        <a href={props.src} target=\"_blank\" >\n            <Button\n            value='Ver Projeto'\n            color={props.color}\n            type='primary'\n            />\n        </a>\n    </CardProjectsContainer>\n  );\n}\n\nexport {CardProjects}\n","import styled from 'styled-components'\nimport Icon from '@material-ui/core/Icon'\nimport { lighten, darken } from 'polished'\n\n\nconst handleColorType = theme => {\n    switch (theme) {\n        case 'dark':\n        return \"color: #c4c4c4; \";\n      case \"light\":\n        return \"color: #fff; \";\n      default:\n        return \"color: #000; \";\n    }\n};\n\nconst Type = (theme)=>{\n    switch(theme){\n        case 'primary':\n            return (`\n                background-color: #798C8C;\n                &&:active{\n                    background-color: ${darken(0.09, '#798C8C')}\n                }\n            `    \n        )\n        default:\n            break\n    }\n}\n\nconst ButtonContainer = styled.button`\n    border: none;\n    border-radius: 10px;\n    padding: 10px;\n    font-size: 18px;\n    outline: none;\n    ${({type}) => Type(type)}\n    background-color: ${props=> props.CurrentTheme === 'dark' && lighten(.1,'#798C8C')\n    };\n`\nconst TouchIcon = styled(Icon)`\n    /* width: auto; */\n    border: none;\n    border-radius: 100%;\n    background-color: white;\n    color: white;\n    &&:active{\n        background-color: yellow;\n    }\n`\n\nconst SetTheme = styled(Icon)`\n    border-radius: 100%;\n    transition:.3s;\n    &&:hover{\n       border-bottom: solid 3px ${lighten(0.1, \"black\")};\n    }\n    &&:active{\n        transform: rotate(45deg); \n    }\n    ${({themecolor}) => handleColorType(themecolor)}\n`\n\nexport {ButtonContainer, TouchIcon, SetTheme}","import React from 'react';\nimport { ButtonContainer , TouchIcon, SetTheme} from './style';\nimport Icon from '@material-ui/core/Icon'\nimport { useSelector} from 'react-redux'\n\nconst Button =(props)=>{\n    const store = useSelector(state=> state)\n    const { theme } =  store\n  return (\n    <ButtonContainer \n        type={props.type}\n        onClick={props.action}\n        CurrentTheme={theme.theme || theme.initial_state.theme}\n    >{props.value}</ButtonContainer>\n  )\n}\n\nconst ButtonIcon =(props)=>{\n    return(\n        <TouchIcon  className={`fas fa-${props.icon}`}>\n            \n        </TouchIcon>\n    )\n}\n\nconst SetThemeIcon = (props)=>{\n    return <SetTheme\n        onClick={props.action}\n        themecolor={props.theme}\n        className={`fas fa-adjust`}\n    />\n}\n\nexport { Button, ButtonIcon, SetThemeIcon }\n","import styled from 'styled-components'\nimport {lighten, darken} from 'polished'\n\nconst SkillsContainer = styled.section`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n    width: 100%;\n    min-height: 300px;\n    padding: 30px 0;\n`\n\nconst SkillTitle = styled.h2`\n    \n`\n\nconst ProgressContainer =styled.div`\n    width: 70%;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-around;\n    align-items: center;\n\n`\nconst ProgressName = styled.h3`\n    align-self: flex-start;\n    padding: 8px 0;\n    transition: .5s;\n`\n\nconst ProgressBar = styled.div`\n    width: 100%;\n    height: 19px;\n    border-radius: 10px;\n    transition: .2s;\n    background-color: ${props=> props.CurrentTheme === 'dark' ? '#03738C' : '#024059'};\n    box-shadow: ${props=> props.CurrentTheme !== 'dark' && '0px 1px 6px'+  lighten(0.1, \"black\")};\n`\nconst Progress = styled.div`\n    width: ${props=> `${props.progress}%`};\n    height: 19px;\n    text-align: end;\n    vertical-align: middle;\n    border-radius: 10px;\n    transition: .2s;\n    background-color: ${props=> props.CurrentTheme === 'dark' ? '#024059':'#03738C'};\n    color: ${props=> props.CurrentTheme === 'dark' ? darken(0.1, '#fff'):'#0D0D0D'};\n    &&:hover{\n        /* background-color: ${lighten(0.3, \"red\")}; */\n    }\n`\nexport {\n    SkillsContainer,\n    ProgressContainer,\n    ProgressBar,\n    Progress,\n    ProgressName,\n    SkillTitle\n}","export const LANG ={\n    about: 'Olá, me chamo Jonatas Pinto atuo na área de TI desde 2014. Colaboro com o projeto Estartando Devs desde sua fundação onde compartilhamos conhecimentos e experiências na área de desenvolvimento web, pois acreditamos que aprender a programar e trabalhar no ramo da tecnologia hoje em dia é muito importante. Vivemos em um cenário onde tudo é voltado para isso, logo o desenvolvimento de novas tecnologias é algo que não tem previsão de fim. Trabalho na B2W Digital e sou formado em Análise e Desenvolvimento de Sistemas.',\n    aboutMe: 'Sobre Mim',\n    portfolio:'Portfólio',\n    skill: 'Competências',\n    skills:[\n        {\n            \"name\": \"Javascript\",\n            \"progress\": 85,\n        },\n        {\n          \"name\": \"Reactjs\",\n          \"progress\": 80,\n        },\n        {\n            \"name\": \"Angular\",\n            \"progress\": 70,\n        },\n        {\n            \"name\": \"Sass\",\n            \"progress\": 90,\n        },\n        {\n            \"name\": \"HTML\",\n            \"progress\": 100,\n        },\n        {\n            \"name\": \"CSS\",\n            \"progress\": 90,\n        },\n        {\n            \"name\": \"Nodejs\",\n            \"progress\": 65,\n        },\n        {\n            \"name\": \"React-Native\",\n            \"progress\": 60,\n        },\n        {\n            \"name\": \"Styled-Components\",\n            \"progress\": 89,\n        },\n    ]\n}","import React from 'react'\nimport { \n    SkillsContainer,\n    SkillTitle,\n    ProgressContainer,\n    ProgressBar,\n    Progress,\n    ProgressName\n} from  './style'\nimport {LANG} from '../../shared/pt'\n\nexport default function Skills(props) {      \n    return (\n        <SkillsContainer>\n            <SkillTitle>{LANG.skill}</SkillTitle>   \n            {LANG.skills.map((skill, index)=>{\n                return(\n                    <ProgressContainer key={index}>\n                        <ProgressName>\n                        {skill.name}\n                        </ProgressName>\n                        <ProgressBar\n                            CurrentTheme={props.CurrentTheme}\n                        >\n                            <Progress \n                                CurrentTheme={props.CurrentTheme}\n                                progress={skill.progress}\n                            >\n                                {`${skill.progress}%`}\n                            </Progress>\n                        </ProgressBar>\n                    </ProgressContainer>\n                )})\n            }\n        </SkillsContainer>\n    )\n}","import styled from 'styled-components'\n\nconst AboutContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 8px;\n    border: none;\n    width: 95%;\n`\nconst Title = styled.p`\n    font-size: 25px;\n    display: flex;\n    align-self: flex-start;\n`\n\nconst Paragraph = styled.p`\n    font-size: 18px;\n    text-align: justify;\n    line-height: 25px;\n    transition: 1s;\n    padding: 15px 0 0 0;\n    text-indent: 40px;\n`\n\nexport { AboutContainer, Title, Paragraph}","import React from 'react';\nimport { AboutContainer, Title, Paragraph } from './style';\nimport {LANG} from '../../shared/pt'\n\nexport default function About() {\n  return (\n    <AboutContainer>\n        <Title>{LANG.aboutMe}</Title>\n        <Paragraph>\n            {LANG.about}\n        </Paragraph>\n    </AboutContainer>\n  );\n}\n","import axios from 'axios'\nconst api = axios.create({baseURL:'https://api.github.com/users/jonataspinto'})\n\nexport const GetGithubProfile = async ()=>{\n   const res = await api.get()\n   return await res.data\n}","import * as api from '../../services'\n\nexport const TYPES = {\n    GET_DETAILS: 'GET_DETAILS',\n    ERROR_GET_DETAILS: 'ERROR_GET_DETAILS'\n}\n\nexport const GetProfile = ()=> async (dispatch, getState)=>{\n    dispatch({\n        type: TYPES.GET_DETAILS\n    })\n    try{\n        const response = await api.GetGithubProfile()\n        dispatch({\n            type: TYPES.GET_DETAILS,\n            user: response\n        })\n    }catch(error){\n        dispatch({\n            type: TYPES.ERROR_GET_DETAILS,\n            error: error\n            \n        })\n    }\n\n}","export const Projects = [\n    {\n        projectName: 'Select Court Sports',\n        imgUrl: 'https://raw.githubusercontent.com/estartando-devs/select-court-sports/develop/src/assets/img/soccer-court.png',\n        repositoryUrl:'https://github.com/estartando-devs/select-court-sports/tree/develop',\n        description:'Plataforma para gestão de quadras de esporte especificamente voltada para agendamentos.'\n    },\n    {\n        projectName: 'Conforto Animal',\n        imgUrl: 'https://raw.githubusercontent.com/estartando-devs/conforto-animal/develop/src/assets/images/logo.png',\n        repositoryUrl:'https://github.com/estartando-devs/conforto-animal',\n        description:'O Conforto Animal tem como ideia principal, a diminuição de animais nas ruas. Com isso, a criação do site facilitaria a adoção/doação de seus bichinhos de forma direta e também interativa. '\n    },\n    {\n        projectName: 'Deputados',\n        imgUrl: 'https://1.bp.blogspot.com/-reSXIrw-_kA/V6y0aSe0YcI/AAAAAAAAEDc/hC7RrvM-cSkORw55Hh50DXnpEviMqQiswCLcB/s1600/brasillogo3.png',\n        repositoryUrl:'https://github.com/jonataspinto/Deputados',\n        description:'Página para consulta de mandatos de deputados e partidos eleitorais.'\n    }    \n]","import React,{ useEffect } from 'react';\nimport { Container, ProjectsSection, TitleProjects} from './style';\nimport {Header, Skills, CardProjects, About} from '../../components'\nimport { useSelector, useDispatch} from 'react-redux'\nimport { GetProfile } from '../../store/user/user.actions'\nimport {Projects} from '../../shared/projects'\nimport {LANG} from '../../shared/pt'\n\nconst Home =() =>{\n  const dispatch = useDispatch()\n  const store = useSelector(state=> state)\n  const { theme} =  store\n  \n  useEffect(()=>{\n    ShowProfile()\n  },[])\n\n  const ShowProfile = ()=>{\n    dispatch(GetProfile())     \n  }\n  \n  return (\n      <Container\n        CurrentTheme={theme.theme || theme.initial_state.theme}\n      >\n        <Header/>\n        <About/>\n        <Skills CurrentTheme={theme.theme || theme.initial_state.theme}/>\n        <TitleProjects>{LANG.portfolio}</TitleProjects>\n        <ProjectsSection>\n          {\n            Projects.map((proj, index)=>{\n              return <CardProjects key={index}\n              imgUrl={proj.imgUrl}\n              name={proj.projectName}\n              src={proj.repositoryUrl}\n              description={proj.description}\n              />\n            })\n          }\n        </ProjectsSection>\n      </Container>\n  );\n}\nexport default Home","import React from 'react';\nimport{\n    BrowserRouter,\n    Switch,\n    Route\n} from 'react-router-dom'\nimport {Home} from './screens'\n\nconst Router = ()=>{\n    return(\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Switch>\n                <Route path='/' exact component={Home}/>\n            </Switch>\n        </BrowserRouter>\n    )\n}\nexport default Router ","import { TYPES } from './user.actions'\n\nconst initial_state = {\n    user: {},\n}\n\nexport const userReducer = (state = {initial_state}, action)=>{\n    switch(action.type){\n        case TYPES.GET_DETAILS:\n        return {\n            ...state,\n            user: action.user\n        }\n        default:\n            return state\n    }\n}\n","import { TYPES } from './theme.action'\n\nconst initial_state = {\n    theme: 'light'\n}\n\nexport const themeReducer = (state = {initial_state}, action )=>{\n    switch(action.type){\n        case TYPES.SET_THEME:\n            return{\n                ...state,\n                theme: action.theme\n            } \n        default: \n            return state\n    }\n}","import {createStore, combineReducers, applyMiddleware } from 'redux'\nimport ReduxThunk from 'redux-thunk'\nimport { userReducer } from './user/user.reducer'\nimport { themeReducer } from './theme/theme.reducer'\n\nconst rootReducers =  combineReducers({\n    data: userReducer,\n    theme: themeReducer\n})\n\nconst store = createStore(\n    rootReducers,\n    {},\n    applyMiddleware(ReduxThunk)\n)\n\nexport {store}","import React from 'react';\nimport Routers from './Routers'\nimport { Provider } from 'react-redux'\nimport { store } from './store'\nconst App = () =>( \n    <Provider store={store}>\n        <Routers/>\n    </Provider>\n)\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}